cabal-version:       >=1.10
-- Initial package description 'waltz-lang.cabal' generated by 'cabal init'.
--   For further documentation, see http://haskell.org/cabal/users-guide/

name:                bootstrap-compiler
version:             0.1.0.0
license-file:        LICENSE
build-type:          Simple
extra-source-files:  README.md

executable bootstrap-compiler
  main-is:
    Main.hs
  other-modules:
    Action.GetCurrentSrcId
    Action.GetEntrypoints
    Action.GetOptDirs
    Action.GetOutDir
    Action.GetPathById
    Action.GetSrcDirs
    Action.Resolve
    Ast
    Ast.Dump
    Ast.DumpJson
    Ast.Syntax
    Ast.Semantic
    Context.Funs
    Context.Implements
    Diagnostic
    Diagnostic.CannotResolve
    Diagnostic.IndexOutOfBounds
    Diagnostic.MismatchedTypes
    Diagnostic.UnknownField
    Global
    Error.BreakNotInBlock
    Error.CannotResolve
    Error.ReturnNotInFunction
    Fs.ReadFile
    Plugin.Clang.Ast
    Semantic.Analyzer
    Semantic.BlockExpression
    Semantic.CurlyBracketsBody
    Semantic.Discard
    Semantic.Expression
    Semantic.GroupedExpression
    Semantic.Identifier
    Semantic.KeyValue
    Semantic.LambdaExpression
    Semantic.Literal.Array
    Semantic.Literal.Number
    Semantic.Literal.Object
    Semantic.Literal.String
    Semantic.Root
    Semantic.Root.Statement.Base
    Semantic.Shared
    Semantic.Statement.IfStatement
    Semantic.Statement.LetStatement
    Semantic.Statement.WithStatement
    Semantic.TypeExpression
    Syntax.Analyzer
    Syntax.Comment
    Syntax.BlockExpression
    Syntax.CurlyBrackets
    Syntax.Expression
    Syntax.Diagnostic.Position
    Syntax.Discard
    Syntax.GroupedExpression
    Syntax.Identifier
    Syntax.Ignored
    Syntax.KeyValue
    Syntax.LambdaExpression
    Syntax.Literal.Array
    Syntax.Literal.Number
    Syntax.Literal.Object
    Syntax.Literal.String
    Syntax.Punctuation
    Syntax.Root
    Syntax.Root.Statement
    Syntax.Root.Statement.Base
    Syntax.Separator
    Syntax.Shared
    Syntax.Statement
    Syntax.Statement.IfStatement
    Syntax.Statement.LetStatement
    Syntax.Statement.WithStatement
    Syntax.TypeExpression
    Syntax.UnexpectedEndOfInput
    Syntax.UnexpectedToken
    Syntax.UnexpectedStatement
    Syntax.Whitespace
  -- other-extensions:
  build-depends:
    aeson,
    aeson-pretty,
    async,
    base,
    bytestring,
    directory,
    freer-simple,
    megaparsec,
    mtl,
    open-union,
    process,
    split,
    type-fun,
    unordered-containers
  hs-source-dirs:
    src/bootstrap-compiler   
  default-language:
    Haskell2010
  default-extensions:
    AllowAmbiguousTypes,
    BlockArguments,
    ConstraintKinds,
    DataKinds,
    ExistentialQuantification,
    FlexibleContexts,
    FlexibleInstances,
    GADTs,
    ImpredicativeTypes,
    LambdaCase,
    MultiParamTypeClasses,
    NoImplicitPrelude,
    PackageImports,
    PartialTypeSignatures,
    PolyKinds,
    RankNTypes,
    ScopedTypeVariables,
    TypeApplications,
    TypeFamilies,
    TypeFamilyDependencies,
    TypeOperators,
    UndecidableInstances
